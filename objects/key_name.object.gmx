<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Key right names
var right;
switch(global.KeyRight)
{
    default:
    right = chr(global.KeyRight)
    break;
    
    case (vk_left):
    right = "Left"
    break;   
    
    case (vk_right):
    right = "Right"
    break; 
    
    case (vk_up):
    right = "Up"
    break; 
    
    case (vk_down):
    right = "Down"
    break; 
    
    case (vk_enter):
    right = "Enter"
    break; 
    
    case (vk_space):
    right = "Space"
    break;
    
    case (vk_shift):
    right = "Shift"
    break;   
    
    case (vk_control):
    right = "Control"
    break; 
    
    case (vk_alt):
    right = "Alt"
    break; 
    
    case (vk_backspace):
    right = "Backspace"
    break; 
    
    case (vk_tab):
    right = "Tab"
    break; 
    
    case (vk_home):
    right = "Home"
    break;
    
    case (vk_end):
    right = "End"
    break;   
    
    case (vk_delete):
    right = "Delete"
    break; 
    
    case (vk_insert):
    right = "Isert"
    break; 
    
    case (vk_pageup):
    right = "Page up"
    break; 
    
    case (vk_pagedown):
    right = "Page down"
    break; 
    
    case (vk_pause):
    right = "Pause"
    break;
    
    case (vk_printscreen):
    right = "Print screen"
    break;   
    
    case (vk_multiply):
    right = "*"
    break; 
    
    case (vk_divide):
    right = "/"
    break; 
    
    case (vk_decimal):
    right = ", (decimal)"
    break; 
    
    case (vk_add):
    right = "+"
    break; 
    
    case (vk_subtract):
    right = "-"
    break;
    
    
    case(vk_numpad1):
    right = "1"
    break;
    
    case(vk_numpad2):
    right = "2"
    break;
    
    case(vk_numpad3):
    right = "3"
    break;
    
    case(vk_numpad4):
    right = "4"
    break;
    
    case(vk_numpad5):
    right = "5"
    break;
    
    case(vk_numpad6):
    right = "6"
    break;
    
    case(vk_numpad7):
    right = "7"
    break;
    
    case(vk_numpad8):
    right = "8"
    break;
    
    case(vk_numpad9):
    right = "9"
    break;
    
    case(vk_numpad0):
    right = "0"
    break; 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Key left names
var left;
switch(global.KeyLeft)
{
    default:
    left = chr(global.KeyLeft)
    break;
    
    case (vk_left):
    left = "Left"
    break;   
    
    case (vk_right):
    left = "Right"
    break; 
    
    case (vk_up):
    left = "Up"
    break; 
    
    case (vk_down):
    left = "Down"
    break; 
    
    case (vk_enter):
    left = "Enter"
    break; 
    
    case (vk_space):
    left = "Space"
    break;
    
    case (vk_shift):
    left = "Shift"
    break;   
    
    case (vk_control):
    left = "Control"
    break; 
    
    case (vk_alt):
    left = "Alt"
    break; 
    
    case (vk_decimal):
    right = ", (decimal)"
    break; 
    
    case (vk_tab):
    left = "Tab"
    break; 
    
    case (vk_home):
    left = "Home"
    break;
    
    case (vk_end):
    left = "End"
    break;   
    
    case (vk_delete):
    left = "Delete"
    break; 
    
    case (vk_insert):
    left = "Isert"
    break; 
    
    case (vk_pageup):
    left = "Page up"
    break; 
    
    case (vk_pagedown):
    left = "Page down"
    break; 
    
    case (vk_pause):
    left = "Pause"
    break;
    
    case (vk_printscreen):
    left = "Print screen"
    break;   
    
    case (vk_multiply):
    left = "*"
    break; 
    
    case (vk_divide):
    left = "/"
    break; 
    
    case (vk_backspace):
    left = "Backspace"
    break; 
    
    case (vk_add):
    left = "+"
    break; 
    
    case (vk_subtract):
    left = "-"
    break;
    
    
    case(vk_numpad1):
    left = "1"
    break;
    
    case(vk_numpad2):
    left = "2"
    break;
    
    case(vk_numpad3):
    left = "3"
    break;
    
    case(vk_numpad4):
    left = "4"
    break;
    
    case(vk_numpad5):
    left = "5"
    break;
    
    case(vk_numpad6):
    left = "6"
    break;
    
    case(vk_numpad7):
    left = "7"
    break;
    
    case(vk_numpad8):
    left = "8"
    break;
    
    case(vk_numpad9):
    left = "9"
    break;
    
    case(vk_numpad0):
    left = "0"
    break; 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Key jump names
var jump;
switch(global.KeyJump)
{
    default:
    jump = chr(global.KeyJump)
    break;
    
    case (vk_left):
    jump = "Left"
    break;   
    
    case (vk_right):
    jump = "Right"
    break; 
    
    case (vk_up):
    jump = "Up"
    break; 
    
    case (vk_down):
    jump = "Down"
    break; 
    
    case (vk_enter):
    jump = "Enter"
    break; 
    
    case (vk_space):
    jump = "Space"
    break;
    
    case (vk_shift):
    jump = "Shift"
    break;   
    
    case (vk_control):
    jump = "Control"
    break; 
    
    case (vk_alt):
    jump = "Alt"
    break; 
    
    case (vk_decimal):
    right = ", (decimal)"
    break; 
    
    case (vk_tab):
    jump = "Tab"
    break; 
    
    case (vk_home):
    jump = "Home"
    break;
    
    case (vk_end):
    jump = "End"
    break;   
    
    case (vk_delete):
    jump = "Delete"
    break; 
    
    case (vk_insert):
    jump = "Isert"
    break; 
    
    case (vk_pageup):
    jump = "Page up"
    break; 
    
    case (vk_pagedown):
    jump = "Page down"
    break; 
    
    case (vk_pause):
    jump = "Pause"
    break;
    
    case (vk_printscreen):
    jump = "Print screen"
    break;   
    
    case (vk_multiply):
    jump = "*"
    break; 
    
    case (vk_divide):
    jump = "/"
    break; 
    
    case (vk_backspace):
    jump = "Backspace"
    break; 
    
    case (vk_add):
    jump = "+"
    break; 
    
    case (vk_subtract):
    jump = "-"
    break;
    
    
    case(vk_numpad1):
    jump = "1"
    break;
    
    case(vk_numpad2):
    jump = "2"
    break;
    
    case(vk_numpad3):
    jump = "3"
    break;
    
    case(vk_numpad4):
    jump = "4"
    break;
    
    case(vk_numpad5):
    jump = "5"
    break;
    
    case(vk_numpad6):
    jump = "6"
    break;
    
    case(vk_numpad7):
    jump = "7"
    break;
    
    case(vk_numpad8):
    jump = "8"
    break;
    
    case(vk_numpad9):
    jump = "9"
    break;
    
    case(vk_numpad0):
    jump = "0"
    break; 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Key right names
var shoot;
switch(global.KeyShoot)
{
    default:
    shoot = chr(global.KeyShoot)
    break;
    
    case (vk_left):
    shoot = "Left"
    break;   
    
    case (vk_right):
    shoot = "Right"
    break; 
    
    case (vk_up):
    shoot = "Up"
    break; 
    
    case (vk_down):
    shoot = "Down"
    break; 
    
    case (vk_enter):
    shoot = "Enter"
    break; 
    
    case (vk_space):
    shoot = "Space"
    break;
    
    case (vk_shift):
    shoot = "Shift"
    break;   
    
    case (vk_control):
    shoot = "Control"
    break; 
    
    case (vk_alt):
    shoot = "Alt"
    break; 
    
    case (vk_decimal):
    right = ", (decimal)"
    break; 
    
    case (vk_tab):
    shoot = "Tab"
    break; 
    
    case (vk_home):
    shoot = "Home"
    break;
    
    case (vk_end):
    shoot = "End"
    break;   
    
    case (vk_delete):
    shoot = "Delete"
    break; 
    
    case (vk_insert):
    shoot = "Isert"
    break; 
    
    case (vk_pageup):
    shoot = "Page up"
    break; 
    
    case (vk_pagedown):
    shoot = "Page down"
    break; 
    
    case (vk_pause):
    shoot = "Pause"
    break;
    
    case (vk_printscreen):
    shoot = "Print screen"
    break;   
    
    case (vk_multiply):
    shoot = "*"
    break; 
    
    case (vk_divide):
    shoot = "/"
    break; 
    
    case (vk_backspace):
    shoot = "Backspace"
    break; 
    
    case (vk_add):
    shoot = "+"
    break; 
    
    case (vk_subtract):
    shoot = "-"
    break;
    
    
    case(vk_numpad1):
    shoot = "1"
    break;
    
    case(vk_numpad2):
    shoot = "2"
    break;
    
    case(vk_numpad3):
    shoot = "3"
    break;
    
    case(vk_numpad4):
    shoot = "4"
    break;
    
    case(vk_numpad5):
    shoot = "5"
    break;
    
    case(vk_numpad6):
    shoot = "6"
    break;
    
    case(vk_numpad7):
    shoot = "7"
    break;
    
    case(vk_numpad8):
    shoot = "8"
    break;
    
    case(vk_numpad9):
    shoot = "9"
    break;
    
    case(vk_numpad0):
    shoot = "0"
    break; 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set Key right names
var restart;
switch(global.KeyRestart)
{
    default:
    restart = chr(global.KeyRestart)
    break;
    
    case (vk_left):
    restart = "Left"
    break;   
    
    case (vk_right):
    restart = "Right"
    break; 
    
    case (vk_up):
    restart = "Up"
    break; 
    
    case (vk_down):
    restart = "Down"
    break; 
    
    case (vk_enter):
    restart = "Enter"
    break; 
    
    case (vk_space):
    restart = "Space"
    break;
    
    case (vk_shift):
    restart = "Shift"
    break;   
    
    case (vk_control):
    restart = "Control"
    break; 
    
    case (vk_alt):
    restart = "Alt"
    break; 
    
    case (vk_decimal):
    right = ", (decimal)"
    break; 
    
    case (vk_tab):
    restart = "Tab"
    break; 
    
    case (vk_home):
    restart = "Home"
    break;
    
    case (vk_end):
    restart = "End"
    break;   
    
    case (vk_delete):
    restart = "Delete"
    break; 
    
    case (vk_insert):
    restart = "Isert"
    break; 
    
    case (vk_pageup):
    restart = "Page up"
    break; 
    
    case (vk_pagedown):
    restart = "Page down"
    break; 
    
    case (vk_pause):
    restart = "Pause"
    break;
    
    case (vk_printscreen):
    restart = "Print screen"
    break;   
    
    case (vk_multiply):
    restart = "*"
    break; 
    
    case (vk_divide):
    restart = "/"
    break; 
    
    case (vk_backspace):
    restart = "Backspace"
    break; 
    
    case (vk_add):
    restart = "+"
    break; 
    
    case (vk_subtract):
    restart = "-"
    break;
    
    
    case(vk_numpad1):
    restart = "1"
    break;
    
    case(vk_numpad2):
    restart = "2"
    break;
    
    case(vk_numpad3):
    restart = "3"
    break;
    
    case(vk_numpad4):
    restart = "4"
    break;
    
    case(vk_numpad5):
    restart = "5"
    break;
    
    case(vk_numpad6):
    restart = "6"
    break;
    
    case(vk_numpad7):
    restart = "7"
    break;
    
    case(vk_numpad8):
    restart = "8"
    break;
    
    case(vk_numpad9):
    restart = "9"
    break;
    
    case(vk_numpad0):
    restart = "0"
    break; 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
